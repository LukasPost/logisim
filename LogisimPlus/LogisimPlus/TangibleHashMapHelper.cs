// ---------------------------------------------------------------------------------------------------------// Copyright © 2007 - 2024 Tangible Software Solutions, Inc.// This class can be used by anyone provided that the copyright notice remains intact.//// This class is used to replace calls to some Java HashMap or Hashtable methods.// ---------------------------------------------------------------------------------------------------------using System;using System.Collections.Generic;internal static class HashMapHelper{	public static HashSet<KeyValuePair<TKey, TValue>> SetOfKeyValuePairs<TKey, TValue>(this Dictionary<TKey, TValue> dictionary)	{		HashSet<KeyValuePair<TKey, TValue>> entries = new HashSet<KeyValuePair<TKey, TValue>>();		foreach (KeyValuePair<TKey, TValue> keyValuePair in dictionary)		{			entries.Add(keyValuePair);		}		return entries;	}	public static TValue GetValueOrNull<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key)	{		dictionary.TryGetValue(key, out TValue ret);		return ret;	}	public static TValue GetOrDefault<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key, TValue defaultValue)	{		if (dictionary.TryGetValue(key, out TValue ret))			return ret;		else			return defaultValue;	}	public static void PutAll<TKey, TValue>(this Dictionary<TKey, TValue> d1, Dictionary<TKey, TValue> d2)	{		if (d2 is null)			throw new NullReferenceException();		foreach (TKey key in d2.Keys)		{			d1[key] = d2[key];		}	}}
