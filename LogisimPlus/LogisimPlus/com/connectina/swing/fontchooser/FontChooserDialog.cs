// ====================================================================================================
// Produced by the Free Edition of Java to C# Converter.
// To produce customized conversions, purchase a Premium Edition license:
// https://www.tangiblesoftwaresolutions.com/product-details/java-to-csharp-converter.html
// ====================================================================================================

using System.Collections.Generic;

/*
 * A font chooser JavaBean component.
 * Copyright (C) 2009 Dr Christos Bohoris
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License version 3 as published by the Free Software Foundation;
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 * swing@connectina.com
 */
namespace com.connectina.swing.fontchooser
{

	/// <summary>
	/// A dialog containing a <code>JFontChooser</code> as well as OK and Cancel buttons.
	/// 
	/// @author Christos Bohoris
	/// </summary>
	internal class FontChooserDialog : JDialog
	{

		private const long serialVersionUID = -953666562985797384L;

		private static readonly Dictionary<Locale, ResourceBundle> bundles = new Dictionary<Locale, ResourceBundle>();

		private static ResourceBundle Bundle
		{
			get
			{
				Locale loc = Locale.getDefault();
				ResourceBundle ret = bundles[loc];
				if (ret == null)
				{
					ret = ResourceBundle.getBundle("connectina/FontChooserDialog");
					bundles[loc] = ret;
				}
				return ret;
			}
		}

		private JFontChooser chooserPane;

// JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in C#:
// ORIGINAL LINE: FontChooserDialog(javax.swing.JFrame owner, boolean modal, JFontChooser chooserPane, java.awt.event.ActionListener selectionListener) throws java.awt.HeadlessException
		internal FontChooserDialog(JFrame owner, bool modal, JFontChooser chooserPane, ActionListener selectionListener) : base(owner, modal)
		{
			initDialog(chooserPane, selectionListener);
		}

// JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in C#:
// ORIGINAL LINE: FontChooserDialog(javax.swing.JDialog owner, boolean modal, JFontChooser chooserPane, java.awt.event.ActionListener selectionListener) throws java.awt.HeadlessException
		internal FontChooserDialog(JDialog owner, bool modal, JFontChooser chooserPane, ActionListener selectionListener) : base(owner, modal)
		{
			initDialog(chooserPane, selectionListener);
		}

		private void initDialog(JFontChooser chooserPane, ActionListener selectionListener)
		{
			this.chooserPane = chooserPane;
			initComponents(Bundle);
			okButton.addActionListener(selectionListener);
			okButton.addActionListener(new OKActionListener(this));
			cancelButton.addActionListener(new CancelActionListener(this));
			addWindowListener(new FontChooserDialogAdapter(this));
			getRootPane().setDefaultButton(okButton);
			okButton.requestFocusInWindow();
		}

		private class FontChooserDialogAdapter : WindowAdapter
		{
			private readonly FontChooserDialog outerInstance;

			public FontChooserDialogAdapter(FontChooserDialog outerInstance)
			{
				this.outerInstance = outerInstance;
			}


			// @Override
			public virtual void windowClosing(WindowEvent @event)
			{
				dispose();
			}

		}

		private class OKActionListener : ActionListener
		{
			private readonly FontChooserDialog outerInstance;

			public OKActionListener(FontChooserDialog outerInstance)
			{
				this.outerInstance = outerInstance;
			}


			public virtual void actionPerformed(ActionEvent e)
			{
				dispose();
			}

		}

		private class CancelActionListener : ActionListener
		{
			private readonly FontChooserDialog outerInstance;

			public CancelActionListener(FontChooserDialog outerInstance)
			{
				this.outerInstance = outerInstance;
			}


			public virtual void actionPerformed(ActionEvent e)
			{
				dispose();
			}

		}

		/// <summary>
		/// This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
		/// content of this method is always regenerated by the Form Editor.
		/// </summary>
		// @SuppressWarnings("unchecked")
		// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
		private void initComponents(ResourceBundle bundle)
		{

			basePanel = new javax.swing.JPanel();
			chooserPanel = new javax.swing.JPanel();
			chooserSeparator = new javax.swing.JSeparator();
			controlPanel = new javax.swing.JPanel();
			okButton = new javax.swing.JButton();
			cancelButton = new javax.swing.JButton();

			setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
			setTitle(bundle.getString("window.title"));

			basePanel.setLayout(new java.awt.BorderLayout());

			chooserPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 12, 0, 11));
			chooserPanel.setLayout(new java.awt.BorderLayout(0, 12));
			chooserPanel.add(chooserSeparator, java.awt.BorderLayout.PAGE_END);

			basePanel.add(chooserPanel, java.awt.BorderLayout.CENTER);
			chooserPanel.add(chooserPane, java.awt.BorderLayout.CENTER);

			controlPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(7, 7, 6, 6));
			controlPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

			okButton.setMnemonic(bundle.getString("action.ok.mnemonic").charAt(0));
			okButton.setText(bundle.getString("action.ok"));
			controlPanel.add(okButton);

			cancelButton.setMnemonic(bundle.getString("action.cancel.mnemonic").charAt(0));
			cancelButton.setText(bundle.getString("action.cancel"));
			controlPanel.add(cancelButton);

			basePanel.add(controlPanel, java.awt.BorderLayout.SOUTH);

			getContentPane().add(basePanel, java.awt.BorderLayout.CENTER);

			pack();
		} // </editor-fold>//GEN-END:initComponents

		// Variables declaration - do not modify//GEN-BEGIN:variables
		private javax.swing.JPanel basePanel;
		private javax.swing.JButton cancelButton;
		private javax.swing.JPanel chooserPanel;
		private javax.swing.JSeparator chooserSeparator;
		private javax.swing.JPanel controlPanel;
		private javax.swing.JButton okButton;
		// End of variables declaration//GEN-END:variables
	}

}
